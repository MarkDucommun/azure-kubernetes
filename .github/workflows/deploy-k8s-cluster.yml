name: Deploy Kubernetes Cluster

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add Private SSH Key
        run: |
          mkdir -p ~/.ssh  # Ensure .ssh directory exists
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/github_action_key
          chmod 600 ~/.ssh/github_action_key

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan -input=false \
          -var "admin_ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
          -var "resource_group_name=test-k8s"
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -input=false tfplan
        working-directory: terraform

      - name: Capture Terraform Output
        id: get_output
        run: terraform output -json > terraform_output.json
        working-directory: terraform

      - name: Upload Terraform Output as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-output
          path: terraform/terraform_output.json

  provision_k8s:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Terraform Output Artifact
        uses: actions/download-artifact@v3
        with:
          name: terraform-output
          path: terraform

      - name: Add Private SSH Key for Ansible
        run: |
          mkdir -p ~/.ssh  # Ensure .ssh directory exists
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/github_action_key
          chmod 600 ~/.ssh/github_action_key

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible jq

      - name: Replace Placeholder IP in Inventory
        run: |
          PUBLIC_IP=$(jq -r '.vm_public_ip.value' terraform/terraform_output.json)
          echo "Public IP: $PUBLIC_IP"
          sed -i "s/PLACEHOLDER_IP/${PUBLIC_IP}/g" ansible/inventory.ini      
          cat ansible/inventory.ini

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ansible/inventory.ini --private-key ~/.ssh/github_action_key ansible/provision_k8s.yml
        env:
          ANSIBLE_SSH_ARGS: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/.ssh/github_action_key"
          ANSIBLE_PRIVATE_KEY_FILE: ~/.ssh/github_action_key
