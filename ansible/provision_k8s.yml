- name: Provision Single-Node Kubernetes Cluster
  hosts: all
  become: true
  tasks:
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - containerd
        state: present
        update_cache: yes

    - name: Ensure kubernetes Python library is installed
      pip:
        name: kubernetes
        executable: /usr/bin/python3.8
      become: yes

    - name: Create /etc/apt/keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Kubernetes GPG key
      become: true
      shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Change permissions of the GPG key
      become: true
      file:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        owner: root
        group: root
        mode: '0644'

    - name: Add Kubernetes APT repository
      become: true
      copy:
        content: |
          deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg]  https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /
        dest: /etc/apt/sources.list.d/kubernetes.list

    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install kubeadm, kubelet, and kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold the Kubernetes packages at their installed versions
      become: true
      command: apt-mark hold kubelet kubeadm kubectl

    - name: Disable swap
      shell: |
        if swapon --show | grep -q swap; then
          swapoff -a
        fi
      changed_when: false

    - name: Ensure swap is disabled on reboot
      replace:
        path: /etc/fstab
        regexp: '^(.*/swap.*)$'
        replace: '# \1'

    - name: Enable and start containerd
      systemd:
        name: containerd
        enabled: true
        state: started
      become: true

    - name: Ensure br_netfilter module is loaded
      command: modprobe br_netfilter
      become: true

    - name: Set sysctl parameters for Kubernetes networking
      sysctl:
        name: "{{ item }}"
        value: 1
        sysctl_set: yes
        state: present
        reload: yes
      with_items:
        - net.bridge.bridge-nf-call-iptables
        - net.ipv4.ip_forward
      become: true

    - name: Check if Kubernetes cluster is already initialized
      stat:
        path: /etc/kubernetes/admin.conf
      register: kubeadm_status

    - name: Initialize Kubernetes cluster
      command: kubeadm init --pod-network-cidr=192.168.0.0/16
      when: kubeadm_status.stat.exists == false
      become: true

    - name: Create .kube directory if it doesn't exist
      file:
        path: "/home/{{ ansible_user }}/.kube"
        state: directory
        mode: '0755'
      become: yes
      become_user: "{{ ansible_user }}"

    - name: Copy /etc/kubernetes/admin.conf to $HOME/.kube/config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ ansible_user }}/.kube/config"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
        remote_src: yes
      become: yes

    - name: Check if Calico is already deployed
      command: kubectl get pods -n kube-system
      register: calico_check
      changed_when: false
      failed_when: false

    - name: Install Calico for Pod Networking if not already present
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('url', 'https://docs.projectcalico.org/manifests/calico.yaml') }}"
      when: "'calico' not in calico_check.stdout"

    - name: Check if control-plane taint is present
      shell: kubectl get nodes -o jsonpath='{.items[0].spec.taints}' | grep -q "node-role.kubernetes.io/control-plane"
      register: taint_check
      changed_when: false
      failed_when: taint_check.rc not in [0, 1]

    - name: Remove control-plane taint to allow workloads
      command: kubectl taint nodes --all node-role.kubernetes.io/control-plane-
      when: taint_check.rc == 0
