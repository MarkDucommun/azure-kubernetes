- name: Provision Single-Node Kubernetes Cluster
  hosts: all
  become: true
  tasks:
    - name: Ensure azureuser account exists
      become: yes
      user:
        name: azureuser
        home: /home/azureuser
        shell: /bin/bash
        state: present

    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - containerd
        state: present
        update_cache: yes

    - name: Create /etc/apt/keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Check if Kubernetes GPG key is already installed
      stat:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      register: gpg_key_status

    - name: Download Kubernetes GPG key
      become: true
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key
        dest: /tmp/kubernetes-apt-key.gpg
        mode: '0644'
      when: gpg_key_status.stat.exists == false

    - name: De-armor Kubernetes GPG key
      become: true
      command: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubernetes-apt-key.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      when: gpg_key_status.stat.exists == false

    - name: Remove temporary GPG key file
      become: true
      file:
        path: /tmp/kubernetes-apt-key.gpg
        state: absent

    - name: Add Kubernetes APT repository
      become: true
      copy:
        content: |
          deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg]  https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /
        dest: /etc/apt/sources.list.d/kubernetes.list

    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install kubeadm, kubelet, and kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold the Kubernetes packages at their installed versions
      become: true
      command: apt-mark hold kubelet kubeadm kubectl

    - name: Disable swap
      shell: |
        if swapon --show | grep -q swap; then
          swapoff -a
        fi
      changed_when: false

    - name: Ensure swap is disabled on reboot
      replace:
        path: /etc/fstab
        regexp: '^(.*/swap.*)$'
        replace: '# \1'

    - name: Create /etc/containerd directory
      file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Generate and modify containerd configuration
      shell: |
        containerd config default | sed 's/^\(\s*SystemdCgroup = \)false/\1true/' > /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml
      become: true

#    - name: Generate the default containerd config and save to file
#      command: containerd config default
#      register: containerd_default_config
#
#    - name: Write containerd config to /etc/containerd/config.toml
#      copy:
#        content: "{{ containerd_default_config.stdout }}"
#        dest: /etc/containerd/config.toml
#
#    - name: Update SystemdCgroup to true in containerd config, for single node clusters
#      lineinfile:
#        backrefs: true
#        path: /etc/containerd/config.toml
#        regexp: '^(\s*)SystemdCgroup = false'
#        line: '\1SystemdCgroup = true'

    - name: Enable containerd
      systemd:
        name: containerd
        enabled: true
        state: stopped
      become: true

    - name: Make sysctl settings persistent
      blockinfile:
        path: /etc/sysctl.d/99-kubernetes.conf
        create: yes
        block: |
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
      become: true

    - name: Ensure tmp kube directory exists
      file:
        path: "/tmp/kube"
        state: directory
        mode: '0755'

    - name: Ensure .kube directory exists
      become: yes
      file:
        path: "{{ item }}"
        state: directory
        owner: azureuser
        group: azureuser
        mode: '0755'
      with_items:
        - /home/azureuser
        - /home/azureuser/.kube

    - name: Ensure argo directory exists
      file:
        path: "/tmp/argo"
        state: directory
        mode: '0755'

    - name: Create ArgoCD Application manifest
      copy:
        dest: "/tmp/argo/manifest.yml"
        content: |
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: nginx-test
            namespace: argocd
          spec:
            project: default
            source:
              repoURL: https://github.com/MarkDucommun/azure-kubernetes
              targetRevision: HEAD
              path: argo
            destination:
              server: https://kubernetes.default.svc
              namespace: default
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
